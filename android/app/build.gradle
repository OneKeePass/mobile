apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '..'
    // root = file("../")
    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native
    // reactNativeDir = file("../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen
    // codegenDir = file("../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js
    // cliFile = file("../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]
}

// TODO:(Custom-Jey) - Required to use various icons supported by react-native-vector-icons
project.ext.vectoricons = [
        iconFontNames: ['MaterialCommunityIcons.ttf', 'MaterialIcons.ttf', 'FontAwesome.ttf' ] // Name of the font files you want to copy
]
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
// TODO:(Custom-Jey)


/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'org.webkit:android-jsc:+'


android {
    ndkVersion rootProject.ext.ndkVersion

    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    //TODO: (Custom-Jey) Added for ABI based build
    //      Based on https://reactnative.dev/docs/signed-apk-android#publishing-to-other-stores (0.72 doc)
    splits {
        abi {
            reset()
            enable true
            universalApk false
            include "armeabi-v7a", "arm64-v8a"
        }
    }
    //
    namespace "com.onekeepassmobile"
    defaultConfig {
        applicationId "com.onekeepassmobile"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 8
        versionName "0.11.0"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        //TODO: (Custom-Jey) Added for release time upload key
//        release {
//            if (project.hasProperty('OKP_APP_UPLOAD_STORE_FILE')) {
//                storeFile file(OKP_APP_UPLOAD_STORE_FILE)
//                storePassword OKP_APP_UPLOAD_STORE_PASSWORD
//                keyAlias OKP_APP_UPLOAD_KEY_ALIAS
//                keyPassword OKP_APP_UPLOAD_KEY_PASSWORD
//            }
//        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
//        release {
//            // Caution! In production, you need to generate your own keystore file.
//            // see https://reactnative.dev/docs/signed-apk-android.
//            // Uncomment this for development after commenting out the following one for release
//            signingConfig signingConfigs.debug
//            // TODO: (Custom-Jey) Changed to signingConfig signingConfigs.release
//            // signingConfig signingConfigs.release
//            minifyEnabled enableProguardInReleaseBuilds
//            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
//        }
    }
}

dependencies {
    // TODO:(Custom-Jey)
    // Important: Required to use rust built libs through JNA
    implementation "net.java.dev.jna:jna:5.13.0@aar"
    def work_version = "2.8.0"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // For BootSplash screen
    implementation("androidx.core:core-splashscreen:1.0.0")
    // To use AndroidKeystore
    implementation "androidx.security:security-crypto:1.1.0-alpha06"
    // Biometric support
    //implementation "androidx.biometric:biometric:1.2.0-alpha05"
    implementation "androidx.biometric:biometric-ktx:1.2.0-alpha05"

    // TODO:(Custom-Jey) - End
    
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")
    implementation("com.facebook.react:flipper-integration")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
