/* Generated by Krell, do not edit by hand */

import React, { useEffect, useReducer } from "react";
import {
    AppRegistry,
    View,
    Text
} from 'react-native';
import {name as appName} from './app.json';
import {krellUpdateRoot, onKrellReload} from './target-ios-autofill-extension/main.js';

let plainStyle = {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center'
};

/*
 * Establish a root that works for REPL based dev / prod. In the REPL case
 * the real app root will be loaded async. In prod it won't really be async
 * but we want to treat both cases the same.
 */
const KrellRoot = (props) => {
    const reducer = (state, action) => {
        switch(action.type) {
            case "updateRoot":
                return {...state, loaded: true, root: action.value};
            case "reload":
                return {...state, tx: state.tx+1};
        }
    };
    const [state, dispatch] = useReducer(reducer, {loaded: false, root: null, tx:0});

    useEffect(() => {
        // Mounting the app the first time
        krellUpdateRoot((appRoot) => {
            dispatch({type: "updateRoot", value:appRoot}) ;
        });
        // Hot reloading
        onKrellReload(() => {
            dispatch({type: "reload"});
        });
    }, []);

    if(state.loaded) {
        return state.root(props);
    } else {
        return (
            <View style={plainStyle}>
                <Text>Waiting for Krell to load files.</Text>
            </View>
        );
    }
}

AppRegistry.registerComponent(appName, () => KrellRoot);
