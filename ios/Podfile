# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!
# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'OneKeePassMobile' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # hermes_enabled is set false for Cljs compiled code to work - Jey
    :hermes_enabled => false,
    # :hermes_enabled => flags[:hermes_enabled],
    
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'OneKeePassMobileTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
    
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
      end
    end
    
  end
end


target 'OneKeePassAutoFill' do
  config = use_native_modules!(packages_to_skip:['RNBootSplash','RNSVG', 'RNCClipboard','RNSVG','RNReanimated','RNFileViewer', 'VisionCamera', 
      'RNVectorIcons', 'RNGestureHandler','RNDateTimePicker'
      # ,'AppDelegate'
      # 'React-Fabric','React-FabricImage','React-RCTFabric', 'React-ImageManager'

    
    ])

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => false,
    :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

end

# target 'OneKeePassAutoFill' do
  
#   pod 'React', :path => "../node_modules/react-native/"

#   prefix = "../node_modules/react-native"

#   pod 'FBLazyVector', :path => "#{prefix}/Libraries/FBLazyVector"
#   pod 'FBReactNativeSpec', :path => "#{prefix}/React/FBReactNativeSpec" if !NewArchitectureHelper.new_arch_enabled
#   pod 'RCTRequired', :path => "#{prefix}/Libraries/RCTRequired"
#   pod 'RCTTypeSafety', :path => "#{prefix}/Libraries/TypeSafety", :modular_headers => true
#   #   pod 'React', :path => "#{prefix}/"
#   #   pod 'React-Core', :path => "#{prefix}/"
#   pod 'React-CoreModules', :path => "#{prefix}/React/CoreModules"
#   #   pod 'React-RCTAppDelegate', :path => "#{prefix}/Libraries/AppDelegate"
#   #   pod 'React-RCTActionSheet', :path => "#{prefix}/Libraries/ActionSheetIOS"
#   #   pod 'React-RCTAnimation', :path => "#{prefix}/Libraries/NativeAnimation"
#   #   pod 'React-RCTBlob', :path => "#{prefix}/Libraries/Blob"
#   #   pod 'React-RCTImage', :path => "#{prefix}/Libraries/Image"
#   #   pod 'React-RCTLinking', :path => "#{prefix}/Libraries/LinkingIOS"
#   #   pod 'React-RCTNetwork', :path => "#{prefix}/Libraries/Network"
#   #   pod 'React-RCTSettings', :path => "#{prefix}/Libraries/Settings"
#   #   pod 'React-RCTText', :path => "#{prefix}/Libraries/Text"
#   #   pod 'React-RCTVibration', :path => "#{prefix}/Libraries/Vibration"
#   #   pod 'React-Core/RCTWebSocket', :path => "#{prefix}/"
#   #    pod 'React-rncore', :path => "#{prefix}/ReactCommon"
#   #    pod 'React-cxxreact', :path => "#{prefix}/ReactCommon/cxxreact"
#   #    pod 'React-debug', :path => "#{prefix}/ReactCommon/react/debug"
#   #    pod 'React-utils', :path => "#{prefix}/ReactCommon/react/utils"
#   #    pod 'React-Mapbuffer', :path => "#{prefix}/ReactCommon"
#   #    pod 'React-jserrorhandler', :path => "#{prefix}/ReactCommon/jserrorhandler"
#   #    pod "React-nativeconfig", :path => "#{prefix}/ReactCommon"
#   #    
#   #    pod 'React-jsi', :path => "#{prefix}/ReactCommon/jsi"
#   #    pod 'React-jsc', :path => "#{prefix}/ReactCommon/jsc"
#   #    
#   #    
#   #    pod 'React-jsiexecutor', :path => "#{prefix}/ReactCommon/jsiexecutor"
#   #      pod 'React-jsinspector', :path => "#{prefix}/ReactCommon/jsinspector-modern"
#   #
#   #      pod 'React-callinvoker', :path => "#{prefix}/ReactCommon/callinvoker"
#   #      pod 'React-runtimeexecutor', :path => "#{prefix}/ReactCommon/runtimeexecutor"
#   #      pod 'React-runtimescheduler', :path => "#{prefix}/ReactCommon/react/renderer/runtimescheduler"
#   #      pod 'React-rendererdebug', :path => "#{prefix}/ReactCommon/react/renderer/debug"
#   #      pod 'React-perflogger', :path => "#{prefix}/ReactCommon/reactperflogger"
#   #      pod 'React-logger', :path => "#{prefix}/ReactCommon/logger"
#   #      pod 'ReactCommon/turbomodule/core', :path => "#{prefix}/ReactCommon", :modular_headers => true
#   #      pod 'React-NativeModulesApple', :path => "#{prefix}/ReactCommon/react/nativemodule/core/platform/ios", :modular_headers => true
#   #      pod 'Yoga', :path => "#{prefix}/ReactCommon/yoga", :modular_headers => true
#   #
#   #      pod 'DoubleConversion', :podspec => "#{prefix}/third-party-podspecs/DoubleConversion.podspec"
#   #      pod 'glog', :podspec => "#{prefix}/third-party-podspecs/glog.podspec"
#   #      pod 'boost', :podspec => "#{prefix}/third-party-podspecs/boost.podspec"
#   #      pod 'RCT-Folly', :podspec => "#{prefix}/third-party-podspecs/RCT-Folly.podspec", :modular_headers => true
#   #        
#   #        

#   ### 

#   pod 'RNDeviceInfo', :path => "../node_modules/react-native-device-info"

# end
